#!/bin/sh
DOCKER=${DOCKER:-"docker"}
command -v "${DOCKER}" >/dev/null 2>&1 || { echo >&2 "$(tput setaf 1)Docker Client \"${DOCKER}\" not installed.$(tput sgr0)"; return 1; }

INFO=$("${DOCKER}" info >/dev/null 2>&1)
if [ $? -ne 0 ]; then
    echo >&2 "$(tput setaf 1)Docker Daemon unavailable.$(tput sgr0)"
    if [ "$(id -u 2>/dev/null)" -ne "0" ]; then
        echo >&2 "$(tput setaf 1)Perhaps retry as root?$(tput sgr0)"
    fi
    return 1
fi

IMAGE=${IMAGE:-"php"}
VERSION=${VERSION:-"alpine"}

NETWORK=$("${DOCKER}" network inspect "${NETWORK:-"localhost"}" --format "{{.Name}}" 2>/dev/null)
if [ $? -eq 0 ]; then
    NETWORK="--network \"${NETWORK}\""
fi

CACHE=""
COMPOSER="$(which composer 2>/dev/null)"
if [ $? -eq 0 ]; then
    COMPOSER="--volume \"${COMPOSER}:/bin/composer\""
    COMPOSER_HOME_DIR="$(composer global config home 2>/dev/null)"
    if [ $? -eq 0 ] && [ -d "${COMPOSER_HOME_DIR}" ]; then
        CACHE="--volume \"${COMPOSER_HOME_DIR}:/.composer\" --env \"COMPOSER_HOME=/.composer\""
    fi
fi

"${DOCKER}" inspect --type="image" "localhost/${IMAGE}:latest" >/dev/null 2>&1
if [ $? -eq 0 ]; then
    IMAGE="localhost/${IMAGE}"
    VERSION="latest"
    echo "$(tput setaf 6)Using \"${IMAGE}:${VERSION}\". Rebuild image to update environment.$(tput sgr0)"
else
    echo "$(tput setaf 2)Checking for newer version of \"${IMAGE}:${VERSION}\" on Docker Hub.$(tput setaf 6)"
    "${DOCKER}" pull "${IMAGE}:${VERSION}" 2>/dev/null || echo >&2 "$(tput setaf 1)Could not connect to Docker Hub. Skipping update."
    echo "$(tput sgr0)"
fi

PHPENV="\"${DOCKER}\" run -it --rm --volume \"$(pwd):$(pwd)\" --workdir \"$(pwd)\" --env \"TERM=xterm\" --user \"$(id -u):$(id -g)\" $CACHE $COMPOSER $NETWORK \"${IMAGE}:${VERSION}\" sh"
"${SHELL:-"sh"}" -c "${PHPENV}"
exit $?
